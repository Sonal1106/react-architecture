{"ast":null,"code":"import _objectSpread from \"/Users/sonalsingh/Documents/Code/react-architecture/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\n/*\n * AppReducer\n *\n * The reducer takes care of our data. Using actions, we can change our\n * application state.\n * To add a new action, add it to the switch statement in the reducer function\n *\n * Example:\n * case YOUR_ACTION_CONSTANT:\n *   return state.set('yourStateVariable', true);\n */\n// import { fromJS } from \"immutable\";\n// import Cookie from \"js-cookie\";\n// import {\n//   LOAD_REPOS,\n//   VERIFIED,\n//   TOKEN,\n//   CUSTOMER,\n//   CURRENT_CUSTOMER,\n//   LOGOUT\n// } from \"./constants\";\n// // The initial state of the App\n// const initialState = fromJS({\n//   token: Cookie.get(\"token\"),\n//   verified: undefined,\n//   currentUser: {\n//     email: null,\n//     name: null,\n//     loginId: null,\n//     phone: null,\n//     customerId: null\n//   },\n//   user: {}\n// });\n// function appReducer(state = initialState, action) {\n//   switch (action.type) {\n//     case LOAD_REPOS:\n//       return state.set(\"loading\", true).set(\"error\", false);\n//     case TOKEN:\n//       return state.set(\"token\", action.payload).set(\"verified\", undefined);\n//     case VERIFIED:\n//       return state.set(\"verified\", true);\n//     case CUSTOMER: {\n//       const { body } = action.payload;\n//       return state.set(\"customerId\", body.customer_id);\n//     }\n//     case LOGOUT:\n//       return fromJS({});\n//     case CURRENT_CUSTOMER: {\n//       const user = {\n//         customerId: 11,\n//         name: \"Sonal Singh\",\n//         phone: 7702430412,\n//         email: \"sonal.singh@rubique.com\",\n//         loginId: 121\n//       };\n//       return state.set(\"currentUser\", user);\n//     }\n//     default:\n//       return state;\n//   }\n// }\n// export default appReducer;\nimport { INCREMENT_REQUESTED, INCREMENT, DECREMENT_REQUESTED, DECREMENT } from \"./constants\";\nvar initialState = {\n  count: 0,\n  isIncrementing: false,\n  isDecrementing: false\n};\n\nfunction counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INCREMENT_REQUESTED:\n      return _objectSpread({}, state, {\n        isIncrementing: true\n      });\n\n    case INCREMENT:\n      return _objectSpread({}, state, {\n        count: state.count + 1,\n        isIncrementing: !state.isIncrementing\n      });\n\n    case DECREMENT_REQUESTED:\n      return _objectSpread({}, state, {\n        isDecrementing: true\n      });\n\n    case DECREMENT:\n      return _objectSpread({}, state, {\n        count: state.count - 1,\n        isDecrementing: !state.isDecrementing\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport default counterReducer;","map":{"version":3,"sources":["/Users/sonalsingh/Documents/Code/react-architecture/src/containers/App/reducer.js"],"names":["INCREMENT_REQUESTED","INCREMENT","DECREMENT_REQUESTED","DECREMENT","initialState","count","isIncrementing","isDecrementing","counterReducer","state","action","type"],"mappings":";;AAAA;;;;;;;;;;;AAYA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,SACEA,mBADF,EAEEC,SAFF,EAGEC,mBAHF,EAIEC,SAJF,QAKO,aALP;AAOA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CADY;AAEnBC,EAAAA,cAAc,EAAE,KAFG;AAGnBC,EAAAA,cAAc,EAAE;AAHG,CAArB;;AAMA,SAASC,cAAT,GAAsD;AAAA,MAA9BC,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,mBAAL;AACE,+BACKS,KADL;AAEEH,QAAAA,cAAc,EAAE;AAFlB;;AAKF,SAAKL,SAAL;AACE,+BACKQ,KADL;AAEEJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,GAAc,CAFvB;AAGEC,QAAAA,cAAc,EAAE,CAACG,KAAK,CAACH;AAHzB;;AAMF,SAAKJ,mBAAL;AACE,+BACKO,KADL;AAEEF,QAAAA,cAAc,EAAE;AAFlB;;AAKF,SAAKJ,SAAL;AACE,+BACKM,KADL;AAEEJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,GAAc,CAFvB;AAGEE,QAAAA,cAAc,EAAE,CAACE,KAAK,CAACF;AAHzB;;AAMF;AACE,aAAOE,KAAP;AA5BJ;AA8BD;;AAED,eAAeD,cAAf","sourcesContent":["/*\n * AppReducer\n *\n * The reducer takes care of our data. Using actions, we can change our\n * application state.\n * To add a new action, add it to the switch statement in the reducer function\n *\n * Example:\n * case YOUR_ACTION_CONSTANT:\n *   return state.set('yourStateVariable', true);\n */\n\n// import { fromJS } from \"immutable\";\n// import Cookie from \"js-cookie\";\n\n// import {\n//   LOAD_REPOS,\n//   VERIFIED,\n//   TOKEN,\n//   CUSTOMER,\n//   CURRENT_CUSTOMER,\n//   LOGOUT\n// } from \"./constants\";\n\n// // The initial state of the App\n// const initialState = fromJS({\n//   token: Cookie.get(\"token\"),\n//   verified: undefined,\n//   currentUser: {\n//     email: null,\n//     name: null,\n//     loginId: null,\n//     phone: null,\n//     customerId: null\n//   },\n//   user: {}\n// });\n\n// function appReducer(state = initialState, action) {\n//   switch (action.type) {\n//     case LOAD_REPOS:\n//       return state.set(\"loading\", true).set(\"error\", false);\n//     case TOKEN:\n//       return state.set(\"token\", action.payload).set(\"verified\", undefined);\n//     case VERIFIED:\n//       return state.set(\"verified\", true);\n//     case CUSTOMER: {\n//       const { body } = action.payload;\n//       return state.set(\"customerId\", body.customer_id);\n//     }\n//     case LOGOUT:\n//       return fromJS({});\n//     case CURRENT_CUSTOMER: {\n//       const user = {\n//         customerId: 11,\n//         name: \"Sonal Singh\",\n//         phone: 7702430412,\n//         email: \"sonal.singh@rubique.com\",\n//         loginId: 121\n//       };\n//       return state.set(\"currentUser\", user);\n//     }\n//     default:\n//       return state;\n//   }\n// }\n\n// export default appReducer;\n\nimport {\n  INCREMENT_REQUESTED,\n  INCREMENT,\n  DECREMENT_REQUESTED,\n  DECREMENT\n} from \"./constants\";\n\nconst initialState = {\n  count: 0,\n  isIncrementing: false,\n  isDecrementing: false\n};\n\nfunction counterReducer(state = initialState, action) {\n  switch (action.type) {\n    case INCREMENT_REQUESTED:\n      return {\n        ...state,\n        isIncrementing: true\n      };\n\n    case INCREMENT:\n      return {\n        ...state,\n        count: state.count + 1,\n        isIncrementing: !state.isIncrementing\n      };\n\n    case DECREMENT_REQUESTED:\n      return {\n        ...state,\n        isDecrementing: true\n      };\n\n    case DECREMENT:\n      return {\n        ...state,\n        count: state.count - 1,\n        isDecrementing: !state.isDecrementing\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default counterReducer;\n"]},"metadata":{},"sourceType":"module"}