{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport thunk from \"redux-thunk\"; //import { createLogger } from \"redux-logger\";\n\nimport createHistory from \"history/createBrowserHistory\";\nimport appReducer from \"./reducers\";\nexport var history = createHistory();\nvar initialState = {};\nvar enhancers = [];\nvar middleware = [thunk, routerMiddleware(history)]; // Logger\n// const loggerMiddleware = createLogger({\n//   predicate: () => process.env.NODE_ENV === \"development\"\n// });\n// middleware.push(loggerMiddleware);\n\nif (process.env.NODE_ENV === \"development\") {\n  var devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n  if (typeof devToolsExtension === \"function\") {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nvar composedEnhancers = compose.apply(void 0, [applyMiddleware.apply(void 0, middleware)].concat(enhancers));\nvar store = createStore(appReducer(history), initialState, composedEnhancers);\nexport default store;","map":{"version":3,"sources":["/Users/sonalsingh/Documents/Code/react-architecture/src/store.js"],"names":["createStore","applyMiddleware","compose","routerMiddleware","thunk","createHistory","appReducer","history","initialState","enhancers","middleware","process","env","NODE_ENV","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION__","push","composedEnhancers","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAO,IAAMC,OAAO,GAAGF,aAAa,EAA7B;AAEP,IAAMG,YAAY,GAAG,EAArB;AACA,IAAMC,SAAS,GAAG,EAAlB;AACA,IAAMC,UAAU,GAAG,CAACN,KAAD,EAAQD,gBAAgB,CAACI,OAAD,CAAxB,CAAnB,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,IAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,MAAMC,iBAAiB,GAAGC,MAAM,CAACC,4BAAjC;;AAEA,MAAI,OAAOF,iBAAP,KAA6B,UAAjC,EAA6C;AAC3CL,IAAAA,SAAS,CAACQ,IAAV,CAAeH,iBAAiB,EAAhC;AACD;AACF;;AAED,IAAMI,iBAAiB,GAAGhB,OAAO,MAAP,UACxBD,eAAe,MAAf,SAAmBS,UAAnB,CADwB,SAErBD,SAFqB,EAA1B;AAKA,IAAMU,KAAK,GAAGnB,WAAW,CAACM,UAAU,CAACC,OAAD,CAAX,EAAsBC,YAAtB,EAAoCU,iBAApC,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport thunk from \"redux-thunk\";\n//import { createLogger } from \"redux-logger\";\nimport createHistory from \"history/createBrowserHistory\";\nimport appReducer from \"./reducers\";\n\nexport const history = createHistory();\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [thunk, routerMiddleware(history)];\n\n// Logger\n// const loggerMiddleware = createLogger({\n//   predicate: () => process.env.NODE_ENV === \"development\"\n// });\n// middleware.push(loggerMiddleware);\n\nif (process.env.NODE_ENV === \"development\") {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n  if (typeof devToolsExtension === \"function\") {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n);\n\nconst store = createStore(appReducer(history), initialState, composedEnhancers);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}